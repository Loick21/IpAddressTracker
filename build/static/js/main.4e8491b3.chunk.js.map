{"version":3,"sources":["assets/images/icon-arrow.svg","container/iptracker.js","assets/images/icon-location.svg","components/mapComponent.js","helpers/useMap.js","App.js","index.js"],"names":["Iptracker","data","setIp","useState","ip","city","country","timezone","ISP","lat","lng","loading","location","setLocation","error","setError","useEffect","validateIp","test","id","className","onSubmit","event","preventDefault","name","type","onChange","target","value","placeholder","required","src","IconArrow","MapComponent","coordinate","setCoordinate","locationIcon","Icon","iconUrl","icon","iconSize","Map","center","zoom","scrollWheelZoom","TileLayer","url","attribution","Marker","position","Popup","useMap","counrty","IPS","setData","process","fetchIpAddress","a","axios","get","isp","App","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e8491b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import \"../assets/css/ipTracker.css\";\nimport IconArrow from \"../assets/images/icon-arrow.svg\";\n\nimport {useState, useEffect} from \"react\";\n\n// This component is the container of our application\nconst Iptracker = ({data, setIp}) => {\n\n    // Initial state of the container\n    const [location, setLocation] = useState({\n        ip: null,\n        city: null,\n        country: null,\n        timezone: null,\n        ISP: null,\n        lat: 10,\n        lng: 10,\n        loading: true\n    });\n\n\n    // State of error\n    const [error, setError] = useState(null);\n\n    // When the component is mount\n    useEffect(() => {\n        setLocation({...data});\n    }, [data]);\n\n\n    // When the input change\n    const onChange = (event) => setLocation({...location, [event.target.name]: event.target.value, loading: true});\n\n    // When submitting the form\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if (validateIp()) {\n            setIp(location.ip);\n        }\n    }\n\n    // Validator of the ip address\n    const validateIp = () => {\n        const pattern = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n        if (!pattern.test(location.ip)) {\n            setError(\"invalid ip address\");\n            return false;\n        }\n        setError(null);\n        return true;\n    }\n\n\n    return (\n        <section id={\"ipTracker\"}>\n            <div className={\"ipTracker-banner\"}>\n                <h2 className={'ipTracker-title'}>IP Address Tracker</h2>\n                <form onSubmit={(event) => onSubmit(event)}>\n                    {\n                        error ?\n                            <p className={\"error\"}> Invalid ip address </p>\n                            :\n                            null\n                    }\n                    <div className={\"ipTracker-form-container\"}>\n                        <input name={\"ip\"} type={\"text\"} onChange={(event) => onChange(event)}\n                               className={\"ipTracker-input\"} placeholder={\"Search for any IP address or domain \"}\n                               required/>\n                        <button type={\"submit\"} className={\"ipTracker-btn-submit\"}><img src={IconArrow}/></button>\n                    </div>\n                </form>\n                <div className={\"ipTracker-info\"}>\n                    <div className={\"ipTracker-location-info\"}>\n                        <div className={\"ipTracker-block\"}>\n                            <p className={\"ipTracker-block-title\"}>ip address</p>\n                            <p className={\"ipTracker-block-info\"}>{location.ip}</p>\n                        </div>\n                        <div className={\"ipTracker-block\"}>\n                            <p className={\"ipTracker-block-title\"}>location</p>\n                            {\n                                (!location.loading) ?\n                                    (<>\n                                        <p className={\"ipTracker-block-info\"}>{location.city}, {location.country}</p>\n                                    </>) :\n                                    <div>\n                                        <div className={\"first-skeleton-loading\"}></div>\n                                        <div className={\"second-skeleton-loading\"}></div>\n                                    </div>\n                            }\n\n                        </div>\n                        <div className={\"ipTracker-block\"}>\n                            <p className={\"ipTracker-block-title\"}>timezone</p>\n                            {\n                                (!location.loading) ?\n                                    (\n                                        <>\n                                            <p className={\"ipTracker-block-info\"}>UTC{location.timezone}</p>\n                                        </>\n                                    ) :\n                                    <div>\n                                        <div className={\"first-skeleton-loading\"}></div>\n                                        <div className={\"second-skeleton-loading\"}></div>\n                                    </div>\n                            }\n\n                        </div>\n                        <div className={\"ipTracker-block\"}>\n                            <p className={\"ipTracker-block-title\"}>isp</p>\n                            {\n                                (!location.loading) ?\n                                    (<p className={\"ipTracker-block-info\"}>{location.ISP}</p>) :\n                                    <div>\n                                        <div className={\"first-skeleton-loading\"}></div>\n                                        <div className={\"second-skeleton-loading\"}></div>\n                                    </div>\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Iptracker;","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport {useEffect, useState} from \"react\";\nimport {Icon} from \"leaflet\";\nimport icon from '../assets/images/icon-location.svg'\n\nconst MapComponent = ({data}) => {\n\n    // State of the coordinate\n    const [coordinate, setCoordinate] = useState({lng: -118.09462, lat: 34.04915});\n\n    //When the component is created\n    useEffect(() => {\n        if (data) setCoordinate(() => ({lng: data.lng, lat: data.lat}));\n    }, [data]);\n\n    //Map icon\n    const locationIcon = new Icon({\n        iconUrl: icon,\n        iconSize: [30, 40],\n    });\n\n    // Return the mapView\n    return (\n        <div id={\"map\"}>\n            <Map center={[coordinate.lat, coordinate.lng]} zoom={13} scrollWheelZoom={false}>\n                {/*<ChangeMap center={[coordinate.lat,coordinate.lng]} zoom={20}> </ChangeMap>*/}\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                />\n                <Marker position={[coordinate.lat, coordinate.lng]} icon={locationIcon}>\n                    <Popup>\n                        {data.city}; {data.country}\n                        <p>lat : {data.lat}</p>\n                        <p>lng: {data.lng}</p>\n                    </Popup>\n                </Marker>\n            </Map>\n        </div>\n    )\n\n}\n\nexport default MapComponent;\n\n","import axios from \"axios\";\nimport {useEffect, useState} from \"react\";\n\n// Custom useMap hooks\nconst useMap = (ip) => {\n\n    const [data, setData] = useState({\n        ip: null,\n        city: null,\n        counrty: null,\n        timezone: null,\n        IPS: null,\n        lat: 10,\n        lng: 10,\n        loading:true\n    });\n\n\n    // set the url for request\n    let url = `https://geo.ipify.org/api/v2/country,city?apiKey=${process.env['REACT_APP_API_KEY']}`;\n\n    if (ip) url = `https://geo.ipify.org/api/v2/country,city?apiKey=${process.env['REACT_APP_API_KEY']}&ipAddress=${ip}`;\n\n\n    // fecth IPify\n    const fetchIpAddress = async () => {\n\n        try {\n            const {data} = await axios.get(url);\n            setData({\n                ip: data.ip,\n                city: data.location.city,\n                country: data.location.country,\n                timezone: data.location.timezone,\n                ISP: data.isp,\n                lat: data.location.lat,\n                lng: data.location.lng,\n                loading:false\n            });\n        } catch (error) {\n        }\n    }\n\n    // When the component is mount\n    useEffect(() => {\n        fetchIpAddress(url);\n    }, [url]);\n\n    return data;\n\n}\n\nexport default useMap;\n","import './App.css';\n\nimport Iptracker from \"./container/iptracker\";\nimport MapComponent from \"./components/mapComponent\";\nimport {useState} from \"react\";\nimport useMap from \"./helpers/useMap\";\n\nfunction App() {\n\n    const [ip,setIp] = useState('');\n\n    const data = useMap(ip);\n    console.log(data);\n\n    return (\n        <>\n            <Iptracker data={data} setIp={setIp} />\n            <MapComponent data={data}  />\n        </>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}